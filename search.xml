<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Aggregate Function</title>
    <url>/2023/02/06/Aggregate-Function/</url>
    <content><![CDATA[<h3 id="入口函数-in-pkg-x2F-sql-x2F-sem-x2F-builtins-x2F-aggregate-builtins-go"><a href="#入口函数-in-pkg-x2F-sql-x2F-sem-x2F-builtins-x2F-aggregate-builtins-go" class="headerlink" title="入口函数 in pkg&#x2F;sql&#x2F;sem&#x2F;builtins&#x2F;aggregate_builtins.go"></a>入口函数 in pkg&#x2F;sql&#x2F;sem&#x2F;builtins&#x2F;aggregate_builtins.go</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> builtins</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initAggregateBuiltins</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// Add all aggregates to the builtins map after a few sanity checks.</span></span><br><span class="line">    <span class="keyword">for</span> k, v := <span class="keyword">range</span> aggregates &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> v.props.Class != tree.AggregateClass &#123;</span><br><span class="line">            <span class="built_in">panic</span>(errors.AssertionFailedf(<span class="string">&quot;%s: aggregate functions should be marked with the tree.AggregateClass &quot;</span>+</span><br><span class="line"><span class="string">&quot;function class, found %v&quot;</span>, k, v))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> _, a := <span class="keyword">range</span> v.overloads &#123;</span><br><span class="line">            <span class="keyword">if</span> a.AggregateFunc == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">panic</span>(errors.AssertionFailedf(<span class="string">&quot;%s: aggregate functions should have eval.AggregateFunc constructors, &quot;</span>+</span><br><span class="line"><span class="string">&quot;found %v&quot;</span>, k, a))</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> a.WindowFunc == <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="built_in">panic</span>(errors.AssertionFailedf(<span class="string">&quot;%s: aggregate functions should have tree.WindowFunc constructors, &quot;</span>+</span><br><span class="line"><span class="string">&quot;found %v&quot;</span>, k, a))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        registerBuiltin(k, v)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// aggregates are a special class of builtin functions that are wrapped</span></span><br><span class="line"><span class="comment">// at execution in a bucketing layer to combine (aggregate) the result</span></span><br><span class="line"><span class="comment">// of the function being run over many rows.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// See `aggregateFuncHolder` in the sql package.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// In particular they must not be simplified during normalization</span></span><br><span class="line"><span class="comment">// (and thus must be marked as impure), even when they are given a</span></span><br><span class="line"><span class="comment">// constant argument (e.g. SUM(1)). This is because aggregate</span></span><br><span class="line"><span class="comment">// functions must return NULL when they are no rows in the source</span></span><br><span class="line"><span class="comment">// table, so their evaluation must always be delayed until query</span></span><br><span class="line"><span class="comment">// execution.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Some aggregate functions must be called with NULL inputs, so normalizing</span></span><br><span class="line"><span class="comment">// an aggregate function call to NULL in the presence of a NULL argument may</span></span><br><span class="line"><span class="comment">// not be correct. There are two cases where an aggregate function must handle</span></span><br><span class="line"><span class="comment">// be called with null inputs:</span></span><br><span class="line"><span class="comment">// 1) the aggregate function does not skip NULLs (e.g., ARRAY_AGG); and</span></span><br><span class="line"><span class="comment">// 2) the aggregate function does not return NULL when it aggregates no rows</span></span><br><span class="line"><span class="comment">//		(e.g., COUNT).</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// For use in other packages, see AllAggregateBuiltinNames and</span></span><br><span class="line"><span class="comment">// GetBuiltinProperties().</span></span><br><span class="line"><span class="comment">// These functions are also identified with Class == tree.AggregateClass.</span></span><br><span class="line"><span class="comment">// The properties are reachable via tree.FunctionDefinition.</span></span><br><span class="line"><span class="keyword">var</span> aggregates = <span class="keyword">map</span>[<span class="type">string</span>]builtinDefinition&#123;</span><br><span class="line">	......</span><br><span class="line">	<span class="string">&quot;list_agg&quot;</span>: makeBuiltin(aggProps(),</span><br><span class="line">		makeAggOverload([]*types.T&#123;types.Any, types.Any&#125;, types.String, newListAggAggregate,</span><br><span class="line">			<span class="string">&quot;Concatenates all selected values using the provided delimiter.&quot;</span>, volatility.Immutable, <span class="literal">true</span> <span class="comment">/* calledOnNullInput */</span>),</span><br><span class="line">	),</span><br><span class="line">	......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>cockroachDB</category>
      </categories>
      <tags>
        <tag>crdb</tag>
        <tag>function</tag>
      </tags>
  </entry>
  <entry>
    <title>Test Oracle Random</title>
    <url>/2023/02/01/Test-Oracle-Random/</url>
    <content><![CDATA[<h3 id="以下测试用例证明where后面的random函数每行数据都会跑一遍"><a href="#以下测试用例证明where后面的random函数每行数据都会跑一遍" class="headerlink" title="以下测试用例证明where后面的random函数每行数据都会跑一遍"></a>以下测试用例证明where后面的random函数每行数据都会跑一遍</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- pg  &amp; crdb</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tr1114(c1 <span class="type">int</span> ,c2 <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">select</span> generate_series(<span class="number">1</span>,<span class="number">10000</span>),generate_series(<span class="number">1</span>,<span class="number">10000</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1114 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>((random()<span class="operator">*</span><span class="number">10000</span>)<span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> id2 <span class="operator">=</span> trunc(random()<span class="operator">*</span><span class="number">10</span>);</span><br><span class="line">id1 <span class="operator">|</span> id2</span><br><span class="line"><span class="comment">-----+-----</span></span><br><span class="line">   <span class="number">4</span> <span class="operator">|</span>   <span class="number">4</span></span><br><span class="line">   <span class="number">7</span> <span class="operator">|</span>   <span class="number">7</span></span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> id2 <span class="operator">=</span> trunc(random()<span class="operator">*</span><span class="number">10</span>);</span><br><span class="line">id1 <span class="operator">|</span> id2</span><br><span class="line"><span class="comment">-----+-----</span></span><br><span class="line">   <span class="number">6</span> <span class="operator">|</span>   <span class="number">6</span></span><br><span class="line">   <span class="number">0</span> <span class="operator">|</span>   <span class="number">0</span></span><br><span class="line">(<span class="number">2</span> <span class="keyword">rows</span>)</span><br><span class="line"></span><br><span class="line">postgres<span class="operator">=</span># <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> id2 <span class="operator">=</span> trunc(random()<span class="operator">*</span><span class="number">10</span>);</span><br><span class="line">id1 <span class="operator">|</span> id2</span><br><span class="line"><span class="comment">-----+-----</span></span><br><span class="line">   <span class="number">5</span> <span class="operator">|</span>   <span class="number">5</span></span><br><span class="line">(<span class="number">1</span> <span class="type">row</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- oracle :</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tr1114(c1 <span class="type">int</span> ,c2 <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">6</span>,<span class="number">6</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">7</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">9</span>,<span class="number">9</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">values</span>(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">-- 创建一张大数据量的表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1 <span class="operator">+</span> <span class="number">1341</span>,tr1114.c2<span class="operator">+</span> <span class="number">5173</span> <span class="keyword">from</span> tr1114;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1 <span class="operator">+</span> <span class="number">1341</span>,tr1114.c2<span class="operator">+</span> <span class="number">5173</span> <span class="keyword">from</span> tr1114;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1 <span class="operator">+</span> <span class="number">116</span>,tr1114.c2<span class="operator">+</span> <span class="number">1273</span> <span class="keyword">from</span> tr1114;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1114 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1<span class="operator">*</span><span class="number">2</span>,tr1114.c2<span class="operator">*</span><span class="number">3</span> <span class="keyword">from</span> tr1114;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1114 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> id2 <span class="operator">=</span> trunc(random()<span class="operator">*</span><span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1114 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"></span><br><span class="line">C1	   C2</span><br><span class="line"><span class="comment">---------- ----------</span></span><br><span class="line">       <span class="number">106</span>	  <span class="number">106</span></span><br><span class="line">       <span class="number">128</span>	  <span class="number">128</span></span><br><span class="line">      <span class="number">2112</span>	 <span class="number">2112</span></span><br><span class="line">      <span class="number">9856</span>	 <span class="number">9856</span></span><br></pre></td></tr></table></figure>

<h2 id="仍需验证oracle有主键索引存在时，oracle行为是否是先计算random值，再通过主键索引扫描全表查找是否有符合条件的数据。"><a href="#仍需验证oracle有主键索引存在时，oracle行为是否是先计算random值，再通过主键索引扫描全表查找是否有符合条件的数据。" class="headerlink" title="仍需验证oracle有主键索引存在时，oracle行为是否是先计算random值，再通过主键索引扫描全表查找是否有符合条件的数据。"></a>仍需验证oracle有主键索引存在时，oracle行为是否是先计算random值，再通过主键索引扫描全表查找是否有符合条件的数据。</h2><h3 id="若真的是这样呢，猜测开销会比一行数据对比一个random值大。"><a href="#若真的是这样呢，猜测开销会比一行数据对比一个random值大。" class="headerlink" title="若真的是这样呢，猜测开销会比一行数据对比一个random值大。"></a>若真的是这样呢，猜测开销会比一行数据对比一个random值大。</h3><h4 id="先为大表添加主键索引"><a href="#先为大表添加主键索引" class="headerlink" title="先为大表添加主键索引"></a>先为大表添加主键索引</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tr1114 modify(c1 <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tr1114 <span class="keyword">add</span> <span class="keyword">constraint</span> pk_tr1114_1 <span class="keyword">primary</span> key(c1);</span><br></pre></td></tr></table></figure>
<h4 id="表中有重复数据，修改主键失败"><a href="#表中有重复数据，修改主键失败" class="headerlink" title="表中有重复数据，修改主键失败"></a>表中有重复数据，修改主键失败</h4><p>tr1115  tr1116 数据量相同，tr1115主键为c1，tr1116无主键</p>
<h4 id="创建新表-tr1115-有主键，tr1116-无主键"><a href="#创建新表-tr1115-有主键，tr1116-无主键" class="headerlink" title="创建新表 tr1115 有主键，tr1116 无主键"></a>创建新表 tr1115 有主键，tr1116 无主键</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- tr1115 有主键</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tr1115;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tr1115(c1 <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,c2 <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1115 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1, tr1114.c1 <span class="operator">+</span> <span class="number">1</span> <span class="keyword">from</span> tr1114;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- tr1116 无主键</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tr1116;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tr1116(c1 <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,c2 <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tr1116 <span class="keyword">select</span> <span class="keyword">distinct</span> tr1114.c1, tr1114.c1 <span class="operator">+</span> <span class="number">1</span> <span class="keyword">from</span> tr1114;</span><br></pre></td></tr></table></figure>

<h4 id="查看执行计划，cost"><a href="#查看执行计划，cost" class="headerlink" title="查看执行计划，cost"></a>查看执行计划，cost</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autotrace <span class="keyword">on</span> traceonly;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1114 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"><span class="keyword">set</span> autotrace off;</span><br></pre></td></tr></table></figure>

<h3 id="有主键索引的表查询计划"><a href="#有主键索引的表查询计划" class="headerlink" title="有主键索引的表查询计划"></a>有主键索引的表查询计划</h3><h4 id="按照非主键扫描"><a href="#按照非主键扫描" class="headerlink" title="按照非主键扫描"></a>按照非主键扫描</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1115 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">Plan hash <span class="keyword">value</span>: <span class="number">1555111619</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span> Id  <span class="operator">|</span> Operation	  <span class="operator">|</span> Name   <span class="operator">|</span> <span class="keyword">Rows</span>  <span class="operator">|</span> Bytes <span class="operator">|</span> Cost (<span class="operator">%</span>CPU)<span class="operator">|</span> <span class="type">Time</span>	   <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">0</span> <span class="operator">|</span> <span class="keyword">SELECT</span> STATEMENT  <span class="operator">|</span>	   <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	<span class="number">13</span>   (<span class="number">0</span>)<span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="operator">*</span>  <span class="number">1</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> ACCESS <span class="keyword">FULL</span><span class="operator">|</span> TR1115 <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	<span class="number">13</span>   (<span class="number">0</span>)<span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------------</span></span><br><span class="line">Predicate Information (identified <span class="keyword">by</span> operation id):</span><br><span class="line"><span class="comment">---------------------------------------------------</span></span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">   <span class="number">1</span> <span class="operator">-</span> <span class="keyword">filter</span>(&quot;C2&quot;<span class="operator">=</span><span class="built_in">CAST</span>(&quot;DBMS_RANDOM&quot;.&quot;VALUE&quot;()<span class="operator">*</span><span class="number">10000</span> <span class="keyword">AS</span> <span class="type">int</span>))</span><br><span class="line">Note</span><br><span class="line"><span class="comment">-----</span></span><br><span class="line">   <span class="operator">-</span> <span class="keyword">dynamic</span> statistics used: <span class="keyword">dynamic</span> sampling (level<span class="operator">=</span><span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<h4 id="按照主键扫描"><a href="#按照主键扫描" class="headerlink" title="按照主键扫描"></a>按照主键扫描</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autotrace <span class="keyword">on</span>;</span><br><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1115,tr1114 <span class="keyword">where</span> tr1115.c1<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>) <span class="keyword">and</span> tr1115.c1 <span class="operator">=</span> tr1114.c2;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">Plan hash <span class="keyword">value</span>: <span class="number">1128099595</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span> Id  <span class="operator">|</span> Operation		    <span class="operator">|</span> Name	   <span class="operator">|</span> <span class="keyword">Rows</span>  <span class="operator">|</span> Bytes <span class="operator">|</span> Cost (<span class="operator">%</span>CPU)<span class="operator">|</span> <span class="type">Time</span>	   <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">0</span> <span class="operator">|</span> <span class="keyword">SELECT</span> STATEMENT	    <span class="operator">|</span>		   <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> ACCESS <span class="keyword">BY</span> INDEX ROWID<span class="operator">|</span> TR1115	   <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="operator">*</span>  <span class="number">2</span> <span class="operator">|</span>   INDEX <span class="keyword">UNIQUE</span> SCAN	    <span class="operator">|</span> SYS_C0010634 <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	   <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">Predicate Information (identified <span class="keyword">by</span> operation id):</span><br><span class="line"><span class="comment">---------------------------------------------------</span></span><br><span class="line">   <span class="number">2</span> <span class="operator">-</span> access(&quot;C1&quot;<span class="operator">=</span><span class="built_in">CAST</span>(&quot;DBMS_RANDOM&quot;.&quot;VALUE&quot;()<span class="operator">*</span><span class="number">10000</span> <span class="keyword">AS</span> <span class="type">int</span>))</span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"></span><br><span class="line">        Statistics</span><br><span class="line"><span class="comment">----------------------------------------------------------</span></span><br><span class="line">	 <span class="number">25</span>  <span class="keyword">recursive</span> calls</span><br><span class="line">	  <span class="number">0</span>  db block gets</span><br><span class="line">	 <span class="number">10</span>  consistent gets</span><br><span class="line">	  <span class="number">0</span>  physical <span class="keyword">reads</span></span><br><span class="line">	  <span class="number">0</span>  redo size</span><br><span class="line">       <span class="number">1519</span>  bytes sent via <span class="keyword">SQL</span><span class="operator">*</span>Net <span class="keyword">to</span> client</span><br><span class="line">	<span class="number">403</span>  bytes received via <span class="keyword">SQL</span><span class="operator">*</span>Net <span class="keyword">from</span> client</span><br><span class="line">    <span class="number">2</span>  <span class="keyword">SQL</span><span class="operator">*</span>Net roundtrips <span class="keyword">to</span><span class="operator">/</span><span class="keyword">from</span> client</span><br><span class="line">            <span class="number">1</span>  sorts (memory)</span><br><span class="line">            <span class="number">0</span>  sorts (disk)</span><br><span class="line">            <span class="number">14</span>  <span class="keyword">rows</span> processed</span><br></pre></td></tr></table></figure>

<h4 id="按照主键扫描，filter条件中不使用random函数"><a href="#按照主键扫描，filter条件中不使用random函数" class="headerlink" title="按照主键扫描，filter条件中不使用random函数"></a>按照主键扫描，filter条件中不使用random函数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autotrace <span class="keyword">on</span>;</span><br><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1115 <span class="keyword">where</span> c1<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="operator">|</span> Id  <span class="operator">|</span> Operation		    <span class="operator">|</span> Name	   <span class="operator">|</span> <span class="keyword">Rows</span>  <span class="operator">|</span> Bytes <span class="operator">|</span> Cost (<span class="operator">%</span>CPU)<span class="operator">|</span> <span class="type">Time</span>	   <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">0</span> <span class="operator">|</span> <span class="keyword">SELECT</span> STATEMENT	    <span class="operator">|</span>		   <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span>  <span class="keyword">TABLE</span> ACCESS <span class="keyword">BY</span> INDEX ROWID<span class="operator">|</span> TR1115	   <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	<span class="number">26</span> <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span><span class="operator">*</span>  <span class="number">2</span> <span class="operator">|</span>   INDEX <span class="keyword">UNIQUE</span> SCAN	    <span class="operator">|</span> SYS_C0010634 <span class="operator">|</span>	 <span class="number">1</span> <span class="operator">|</span>	   <span class="operator">|</span>	 <span class="number">1</span>   (<span class="number">0</span>) <span class="operator">|</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> <span class="operator">|</span></span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">PLAN_TABLE_OUTPUT</span><br><span class="line"><span class="comment">--------------------------------------------------------------------------------</span></span><br><span class="line">Predicate Information (identified <span class="keyword">by</span> operation id):</span><br><span class="line"><span class="comment">---------------------------------------------------</span></span><br><span class="line">   <span class="number">2</span> <span class="operator">-</span> access(&quot;C1&quot;<span class="operator">=</span><span class="number">1</span>)</span><br><span class="line">Statistics</span><br><span class="line"><span class="comment">----------------------------------------------------------</span></span><br><span class="line">	 <span class="number">19</span>  <span class="keyword">recursive</span> calls</span><br><span class="line">	  <span class="number">0</span>  db block gets</span><br><span class="line">	 <span class="number">10</span>  consistent gets</span><br><span class="line">	  <span class="number">0</span>  physical <span class="keyword">reads</span></span><br><span class="line">	  <span class="number">0</span>  redo size</span><br><span class="line">       <span class="number">1478</span>  bytes sent via <span class="keyword">SQL</span><span class="operator">*</span>Net <span class="keyword">to</span> client</span><br><span class="line">	<span class="number">403</span>  bytes received via <span class="keyword">SQL</span><span class="operator">*</span>Net <span class="keyword">from</span> client</span><br><span class="line">    <span class="number">2</span>  <span class="keyword">SQL</span><span class="operator">*</span>Net roundtrips <span class="keyword">to</span><span class="operator">/</span><span class="keyword">from</span> client</span><br><span class="line">            <span class="number">1</span>  sorts (memory)</span><br><span class="line">            <span class="number">0</span>  sorts (disk)</span><br><span class="line">            <span class="number">14</span>  <span class="keyword">rows</span> processed</span><br></pre></td></tr></table></figure>

<h3 id="无主键索引的表查询计划"><a href="#无主键索引的表查询计划" class="headerlink" title="无主键索引的表查询计划"></a>无主键索引的表查询计划</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> autotrace <span class="keyword">on</span>;</span><br><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1116 <span class="keyword">where</span> c1<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br><span class="line"></span><br><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tr1116 <span class="keyword">where</span> c2<span class="operator">=</span><span class="built_in">cast</span>(dbms_random.value<span class="operator">*</span><span class="number">10000</span> <span class="keyword">as</span> <span class="type">int</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> mosquito_t2;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mosquito_t2(</span><br><span class="line">c1 <span class="type">decimal</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">c2 <span class="type">INT</span> <span class="keyword">NULL</span>,</span><br><span class="line">c3 <span class="type">INT</span> <span class="keyword">NULL</span>,</span><br><span class="line">c4 <span class="type">INT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">primary</span> key (c1)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">select</span> c1,c2,c3,c3 <span class="keyword">from</span> t2 <span class="keyword">where</span> c1<span class="operator">=</span>round(<span class="number">10000000</span><span class="operator">*</span>dbms_random.value);</span><br><span class="line"><span class="keyword">select</span> c1,c2,c3,c3 <span class="keyword">from</span> t2 <span class="keyword">where</span> c1<span class="operator">=</span>round(<span class="number">10000000</span><span class="operator">*</span>dbms_random.value) <span class="keyword">and</span> c1 <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">9888</span>);</span><br><span class="line"><span class="keyword">select</span> c1,c2,c3,c3 <span class="keyword">from</span> t2 <span class="keyword">where</span> c1<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">set</span> autotrace <span class="keyword">on</span>;</span><br><span class="line">explain plan <span class="keyword">for</span> <span class="keyword">select</span> c1,c2,c3,c3 <span class="keyword">from</span> t2 <span class="keyword">where</span> c1<span class="operator">=</span>round(<span class="number">10000000</span><span class="operator">*</span>random());</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">table</span>(dbms_xplan.display());</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>兼容oracle</category>
      </categories>
      <tags>
        <tag>function</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 安装 oracle</title>
    <url>/2023/02/06/docker-%E5%AE%89%E8%A3%85-oracle/</url>
    <content><![CDATA[<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p><a href="https://betteryuan.top/article/2020/5/18/46.html">参考文章</a></p>
<h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><h4 id="拉取oracle的docker镜像"><a href="#拉取oracle的docker镜像" class="headerlink" title="拉取oracle的docker镜像"></a>拉取oracle的docker镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker pull sath89/oracle-12c</span><br><span class="line">sudo docker run -d --name oracle -p 8080:8080 -p 1521:1521 -v YOURPATH:/mnt -e TZ=Asia/Shanghai sath89/oracle-12c</span><br><span class="line">docker <span class="built_in">exec</span> -it YOURCERTAIINID /bin/bash</span><br></pre></td></tr></table></figure>
<h4 id="安装阿里docker源"><a href="#安装阿里docker源" class="headerlink" title="安装阿里docker源"></a>安装阿里docker源</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://pee6w651.mirror.aliyuncs.com&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="重启docker源"><a href="#重启docker源" class="headerlink" title="重启docker源"></a>重启docker源</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h4 id="选择oracle版本"><a href="#选择oracle版本" class="headerlink" title="选择oracle版本"></a>选择oracle版本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mosquito]<span class="comment"># docker pull sath89/oracle-12c</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from sath89/oracle-12c</span><br><span class="line">863735b9fd15: Pull complete </span><br><span class="line">4fbaa2f403df: Pull complete </span><br><span class="line">44be94a95984: Pull complete </span><br><span class="line">a3ed95caeb02: Pull complete </span><br><span class="line">b8bc6e8767ee: Pull complete </span><br><span class="line">c918da326197: Pull complete </span><br><span class="line">448e1619a038: Pull complete </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">faadd00cf98e: Downloading [=====================&gt;                             ]  1.214GB/2.768GBfaadd00cf98e: Pull complete </span><br><span class="line">fab7f453b7c6: Pull complete </span><br><span class="line">c98ac63d2108: Pull complete </span><br><span class="line">Digest: sha256:565e1ad83bafbc009be34e1aeb4ff0f03d12b069604438a565f5b6ab3ed0c896</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> sath89/oracle-12c:latest</span><br><span class="line">docker.io/sath89/oracle-12c:latest</span><br></pre></td></tr></table></figure>

<h3 id="运行docker"><a href="#运行docker" class="headerlink" title="运行docker"></a>运行docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost mosquito]<span class="comment">#  docker run -d --name oracle -p 8080:8080 -p 1521:1521 -v YOURPATH:/mnt -e TZ=Asia/Shanghai sath89/oracle-12c 834e7053d824e744cf391ba03fac3534e4358dd32ce1d14befbedf81b99cafbd</span></span><br></pre></td></tr></table></figure>
<h3 id="进入容器登录"><a href="#进入容器登录" class="headerlink" title="进入容器登录"></a>进入容器登录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mosquito@localhost ~]$ docker <span class="built_in">exec</span> -it 834e7053d824e744cf391ba03fac3534e4358dd32ce1d14befbedf81b99cafbd  /bin/bash</span><br><span class="line">root@834e7053d824:/<span class="comment"># find / -name &quot;sqlplus&quot; </span></span><br><span class="line">/u01/app/oracle-product/12.1.0/xe/bin/sqlplus</span><br><span class="line">/u01/app/oracle-product/12.1.0/xe/sqlplus</span><br><span class="line">root@834e7053d824:/<span class="comment"># /u01/app/oracle-product/12.1.0/xe/bin/sqlplus / as sysdba</span></span><br><span class="line"></span><br><span class="line">username： system</span><br><span class="line">password： oracle</span><br></pre></td></tr></table></figure>

<h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@834e7053d824:/<span class="comment"># /u01/app/oracle-product/12.1.0/xe/bin/sqlplus USERNAME@USERPWD</span></span><br><span class="line">我的还未实验                 /u01/app/oracle-product/12.1.0/xe/bin/sqlplus system@oracle</span><br></pre></td></tr></table></figure>

<h3 id="再次使用时-操作"><a href="#再次使用时-操作" class="headerlink" title="再次使用时  操作"></a>再次使用时  操作</h3><p><a href="https://www.jianshu.com/p/b30021a421b8">一个网友的操作指南</a></p>
<h4 id="docker-启动-oracle"><a href="#docker-启动-oracle" class="headerlink" title="docker 启动 oracle"></a>docker 启动 oracle</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mosquito@localhost ~]$ docker start oracle</span><br><span class="line">oracle</span><br><span class="line">For more details see su(1).</span><br></pre></td></tr></table></figure>
<h4 id="查看当前运行的容器"><a href="#查看当前运行的容器" class="headerlink" title="查看当前运行的容器"></a>查看当前运行的容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mosquito@localhost ~]$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">834e7053d824        sath89/oracle-12c   <span class="string">&quot;/entrypoint.sh &quot;</span>   2 weeks ago         Up 4 minutes        0.0.0.0:1521-&gt;1521/tcp, 0.0.0.0:8080-&gt;8080/tcp   oracle</span><br></pre></td></tr></table></figure>

<h4 id="进入已启动的oracle容器"><a href="#进入已启动的oracle容器" class="headerlink" title="进入已启动的oracle容器"></a>进入已启动的oracle容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mosquito@localhost ~]$ docker <span class="built_in">exec</span> -it oracle bash</span><br></pre></td></tr></table></figure>
<h4 id="加载环境变量"><a href="#加载环境变量" class="headerlink" title="加载环境变量"></a>加载环境变量</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#source /home/oracle/.bash_profile</span></span><br></pre></td></tr></table></figure>

<h4 id="进入sqlplus"><a href="#进入sqlplus" class="headerlink" title="进入sqlplus"></a>进入sqlplus</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@834e7053d824:/<span class="comment"># sqlplus /nolog</span></span><br><span class="line">SQL*Plus: Release 12.1.0.2.0 Production on Sun Nov 1 10:40:58 2020</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</span><br></pre></td></tr></table></figure>

<h4 id="以sysdba角色登录sqlplus"><a href="#以sysdba角色登录sqlplus" class="headerlink" title="以sysdba角色登录sqlplus"></a>以sysdba角色登录sqlplus</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> conn sys<span class="operator">/</span>oracle <span class="keyword">as</span> sysdba</span><br><span class="line">Connected.</span><br></pre></td></tr></table></figure>

<h5 id="查看当前实例下的数据库"><a href="#查看当前实例下的数据库" class="headerlink" title="查看当前实例下的数据库"></a>查看当前实例下的数据库</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> name <span class="keyword">from</span> v$database;</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line"><span class="comment">---------</span></span><br><span class="line">XE</span><br></pre></td></tr></table></figure>

<h5 id="查看有多少个数据表"><a href="#查看有多少个数据表" class="headerlink" title="查看有多少个数据表"></a>查看有多少个数据表</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> user_tables;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="comment">----------</span></span><br><span class="line">      <span class="number">1249</span></span><br></pre></td></tr></table></figure>
<h4 id="退出sqlplus"><a href="#退出sqlplus" class="headerlink" title="退出sqlplus"></a>退出sqlplus</h4><p>exit</p>
<h4 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h4><p>exit</p>
<h3 id="容器停用重启"><a href="#容器停用重启" class="headerlink" title="容器停用重启"></a>容器停用重启</h3><p>docker start container_ID</p>
<h3 id="停用正在运行的容器"><a href="#停用正在运行的容器" class="headerlink" title="停用正在运行的容器"></a>停用正在运行的容器</h3><p>docker stop container_ID</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>sqllogictest</title>
    <url>/2023/02/06/sqllogictest/</url>
    <content><![CDATA[<h3 id="在cockroachDB中设计的位置为pkg-x2F-sql-x2F-logictest-x2F-logic-go"><a href="#在cockroachDB中设计的位置为pkg-x2F-sql-x2F-logictest-x2F-logic-go" class="headerlink" title="在cockroachDB中设计的位置为pkg&#x2F;sql&#x2F;logictest&#x2F;logic.go"></a>在cockroachDB中设计的位置为pkg&#x2F;sql&#x2F;logictest&#x2F;logic.go</h3><p>更多用法也可以参照sqllogictest <a href="https://www.sqlite.org/sqllogictest/doc/trunk/about.wiki">官方文档</a><br>    1、注释：#<br>    2、不要求返回结果的语句（如建表，增删改）：<br>    3、每个语句后接一个SQL命令，预期成功ok，预期失败error<br>        statement ok	#注意末尾不要加  ‘;’<br>        statement error	</p>
<h3 id="查询语句"><a href="#查询语句" class="headerlink" title="查询语句"></a>查询语句</h3><h4 id="1、预期返回结果并进行比较"><a href="#1、预期返回结果并进行比较" class="headerlink" title="1、预期返回结果并进行比较"></a>1、预期返回结果并进行比较</h4><pre><code>query &lt;type-string&gt; &lt;sort-mode&gt; &lt;label&gt;
----	#如果不加则返回空集
&lt;expected result&gt;
1
2
3
</code></pre>
<h4 id="2、其中-lt-type-string-gt-返回数据类型，包含有TIR"><a href="#2、其中-lt-type-string-gt-返回数据类型，包含有TIR" class="headerlink" title="2、其中 &lt; type-string&gt;返回数据类型，包含有TIR"></a>2、其中 &lt; type-string&gt;返回数据类型，包含有TIR</h4><pre><code>T-文本
I-整型
R-浮点
B-布尔
O-行标识符
</code></pre>
<h4 id="3、-lt-sort-mode-gt-包含nosort，rowsort，valuesort"><a href="#3、-lt-sort-mode-gt-包含nosort，rowsort，valuesort" class="headerlink" title="3、&lt; sort-mode&gt;包含nosort，rowsort，valuesort"></a>3、&lt; sort-mode&gt;包含nosort，rowsort，valuesort</h4><pre><code>nosort-按数据库输出结果显示（默认）
rowsort-输出后再进行排序，按照ASCII码排序
valuesort-和rowsort一样，但是不是按行分组
</code></pre>
<h4 id="4、-lt-label-gt"><a href="#4、-lt-label-gt" class="headerlink" title="4、&lt; label&gt;"></a>4、&lt; label&gt;</h4><pre><code>如果添加的话，会保存查询结果备重用
对于返回结果：
整型-%d
浮点-%.3f
空值-NUL
空字符串-empty
控制字符或不可打印的-@
控制记录
测试过程中需要控制情况下用下列语句：
halt
hash-threshold &lt;max-result-set-size&gt;
1
2
halt停止供调试使用，可以使数据库处于出bug状态
</code></pre>
<p>hash-threshold &lt; max-result-set-size&gt;对结果集中的值数量限制，如果超出了数量，则存储所有值得哈希值，而不是存储在脚本中</p>
<h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><h4 id="1、statement和query可以使用下列前缀，去跳过某些数据库执行下列语句："><a href="#1、statement和query可以使用下列前缀，去跳过某些数据库执行下列语句：" class="headerlink" title="1、statement和query可以使用下列前缀，去跳过某些数据库执行下列语句："></a>1、statement和query可以使用下列前缀，去跳过某些数据库执行下列语句：</h4><pre><code>skipif &lt;database-name&gt;
onlyif &lt;database-name&gt;
</code></pre>
]]></content>
      <categories>
        <category>cockroachDB</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建hexo博客，设置主题</title>
    <url>/2023/02/08/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="环境搭建以及主题的设置"><a href="#环境搭建以及主题的设置" class="headerlink" title="环境搭建以及主题的设置"></a>环境搭建以及主题的设置</h2><h3 id="一、综述"><a href="#一、综述" class="headerlink" title="一、综述"></a>一、综述</h3><h4 id="环境搭建步骤"><a href="#环境搭建步骤" class="headerlink" title="环境搭建步骤"></a>环境搭建步骤</h4><p>1、安装Git,Node.js,Hexo<br>2、GitHub创建个人仓库<br>3、将hexo部署到github<br>4、本地开启server查看效果<br>5、deploy到github发布文章</p>
<h4 id="主题设置步骤"><a href="#主题设置步骤" class="headerlink" title="主题设置步骤"></a>主题设置步骤</h4><p>1、修改blogs&#x2F;_config.yml 文件。设置主题、主题风格以及title等。<br>2、进入主题修改头像、侧边栏、页面显示等。</p>
<h3 id="二、Hexo搭建"><a href="#二、Hexo搭建" class="headerlink" title="二、Hexo搭建"></a>二、Hexo搭建</h3><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><h5 id="安装Git，Node-js，Hexo"><a href="#安装Git，Node-js，Hexo" class="headerlink" title="安装Git，Node.js，Hexo"></a>安装Git，Node.js，Hexo</h5><p><a href="https://zhuanlan.zhihu.com/p/44213627">一个知乎步骤</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo init myblog</span><br><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line">npm install -- 这一步我没有用，不知道作用</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹目录下有：</p>
<p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>** _config.yml: 博客的配置文件**</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server</span><br><span class="line">hexo deploy -- 可以选择性进行</span><br></pre></td></tr></table></figure>

<h5 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h5><p>假设你的github名字为 zhangsan<br>仓库名字 zhansan.github.io<br>博客访问网址 <a href="https://zhansan.github.io/">https://zhansan.github.io</a></p>
<h5 id="生成SSH添加到GitHub"><a href="#生成SSH添加到GitHub" class="headerlink" title="生成SSH添加到GitHub"></a>生成SSH添加到GitHub</h5><h6 id="为自己的电脑生成密钥"><a href="#为自己的电脑生成密钥" class="headerlink" title="为自己的电脑生成密钥"></a>为自己的电脑生成密钥</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>id_rsa是电脑的私人秘钥，id_rsa.pub是公共秘钥。连接github时，会根据github上的公钥匹配你本地的私钥。当顺利匹配，才能使用git进行本地和github之间文件的传输。</p>
<h6 id="github上添加本地生成的密钥"><a href="#github上添加本地生成的密钥" class="headerlink" title="github上添加本地生成的密钥"></a>github上添加本地生成的密钥</h6><p>在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key 把id_rsa.pub里面的信息复制进去。</p>
<h6 id="在gitbash中，查看是否成功"><a href="#在gitbash中，查看是否成功" class="headerlink" title="在gitbash中，查看是否成功"></a>在gitbash中，查看是否成功</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<h5 id="将hexo部署到GitHub"><a href="#将hexo部署到GitHub" class="headerlink" title="将hexo部署到GitHub"></a>将hexo部署到GitHub</h5><h6 id="将hexo生成的文章部署到GitHub上，打开-config-yml修改配置"><a href="#将hexo生成的文章部署到GitHub上，打开-config-yml修改配置" class="headerlink" title="将hexo生成的文章部署到GitHub上，打开_config.yml修改配置"></a>将hexo生成的文章部署到GitHub上，打开_config.yml修改配置</h6><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git项目ssh方式的地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<h6 id="开始就本地文件生成静态文件，然后部署到github"><a href="#开始就本地文件生成静态文件，然后部署到github" class="headerlink" title="开始就本地文件生成静态文件，然后部署到github"></a>开始就本地文件生成静态文件，然后部署到github</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo server </span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<h3 id="三、必须主题设置"><a href="#三、必须主题设置" class="headerlink" title="三、必须主题设置"></a>三、必须主题设置</h3><h4 id="修改blogs-x2F-config-yml-文件"><a href="#修改blogs-x2F-config-yml-文件" class="headerlink" title="修改blogs&#x2F;_config.yml 文件"></a>修改blogs&#x2F;_config.yml 文件</h4><ul>
<li>1、修改主题，使用next</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<ul>
<li>2、主题风格，使用默认即可</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span>  <span class="string">//默认主题</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure>

<h4 id="修改blogs-x2F-themes-x2F-next-x2F-config-yml"><a href="#修改blogs-x2F-themes-x2F-next-x2F-config-yml" class="headerlink" title="修改blogs&#x2F;themes&#x2F;next&#x2F;_config.yml"></a>修改blogs&#x2F;themes&#x2F;next&#x2F;_config.yml</h4><ul>
<li>1、更改头像</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 图片放置在 source/images/头像.png</span></span><br><span class="line"><span class="attr">avatar:</span> </span><br><span class="line">    <span class="attr">url:</span> <span class="string">/images/头像.png</span></span><br></pre></td></tr></table></figure>

<ul>
<li>2、设置Menu</li>
</ul>
<p>默认的只有首页和归档两个,menu配置项中上下的顺序决定了menu显示的顺序。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span></span><br></pre></td></tr></table></figure>

<ul>
<li>3、创建tags</li>
</ul>
<p>当选择添加tags之后，还需要创建相应的文件blogs&#x2F;tags，命令如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>最后编辑创建的blogs&#x2F;tags&#x2F;index.md文件，内容如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">All</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-20 18:57:48</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<ul>
<li>4、创建abouts、categories</li>
</ul>
<p>操作同上<br>使用时，在每篇文章开头添加，可添加多个，如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">-</span> Android</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> Android</span><br><span class="line"><span class="section">- RecyclerView</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<ul>
<li>5、侧边栏社交信息设置</li>
</ul>
<p>编辑主题配置文件_config.yml，修改social字段的值# Social Links</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value is the target link (E.g. GitHub: https://github.com/iissnan)</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="comment">#LinkLabel: Link</span></span><br><span class="line">  <span class="attr">Github:</span> <span class="string">https://github.com/yourgithub</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:dawnxu96@gmail.com</span></span><br><span class="line">  <span class="attr">Instagram:</span> <span class="string">https://instagram.com/yourins</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>6、Hexo博客添加站内搜索</p>
<ul>
<li><p>NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍Local Search的安装。</p>
<ul>
<li><p>安装 hexo-generator-search</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 hexo-generator-searchdb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>编辑主题配置文件，设置local_searchenable为true</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="四、个性化主题设置"><a href="#四、个性化主题设置" class="headerlink" title="四、个性化主题设置"></a>四、个性化主题设置</h3><p><a href="https://zhuanlan.zhihu.com/p/463229559">一个基础实用的参照链接（我参照的）</a><br><a href="https://zhuanlan.zhihu.com/p/28128674">一篇炫酷的页面设置指南（花里胡哨，操作比较费劲）</a><br><a href="https://zhuanlan.zhihu.com/p/85037898">比较基础（我参照的）</a></p>
<ul>
<li>1、首页中一篇文章显示太长，视觉上缩短一下</li>
</ul>
<p>方法一：打开文章的markdown文件，例如source&#x2F;_posts&#x2F;hello-world.md。<br>手动设置文章摘要，我们只需在想显示为摘要的内容之后添 <span id="more"></span> 即可。像下面这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选取的文章摘要</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">正文内容</span><br></pre></td></tr></table></figure>
<p>方法二：更优雅一些，而不是粗暴截断。即在写文章时，在元信息中指定摘要：description。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">点击阅读前文前,</span> <span class="string">首页能看到的文章的简短描述</span></span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>2、Hexo博客添加站内搜索</p>
<ul>
<li><p>NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍Local Search的安装。</p>
<ul>
<li><p>安装 hexo-generator-search</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 hexo-generator-searchdb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>编辑主题配置文件，设置local_searchenable为true</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
  </entry>
</search>
